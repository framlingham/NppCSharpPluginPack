<Window x:Class="NppDemo.Views.SettingsWindowBase"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:NppDemo.Views"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:util="clr-namespace:NppDemo.Utils" x:Name="root"
        Title="Plugin Settings" Width="300" Height="340"
        MinWidth="300" MinHeight="242" mc:Ignorable="d">
	<Window.Resources>
		<CollectionViewSource x:Key="GroupedProperties" Source="{Binding Properties, ElementName=root}">
			<CollectionViewSource.GroupDescriptions>
				<PropertyGroupDescription PropertyName="Category" />
			</CollectionViewSource.GroupDescriptions>
		</CollectionViewSource>

		<DataTemplate x:Key="TextBoxTemplate" DataType="{x:Type local:PropertyItem}">
			<!--  DataType="{x:Type sys:String}"  -->
			<TextBox Text="{Binding Value}" />
		</DataTemplate>

		<DataTemplate x:Key="ComboBoxTemplate" DataType="{x:Type local:PropertyItem}">
			<!--  DataType="{x:Type sys:Enum}"  -->
			<ComboBox ItemsSource="{Binding PropertyType, Converter={x:Static util:EnumType.ToRange}}" SelectedItem="{Binding Value}">
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Converter={x:Static util:StringTo.HumanReadable}}" />
					</DataTemplate>
				</ComboBox.ItemTemplate>
			</ComboBox>
		</DataTemplate>
		<DataTemplate x:Key="BoolTemplate" DataType="{x:Type local:PropertyItem}">
			<!--  DataType="{x:Type sys:Boolean}"  -->
			<CheckBox IsChecked="{Binding Value}" />
		</DataTemplate>

		<local:EditorTemplateSelector x:Key="EditorTemplateSelector"
		                              BoolTemplate="{StaticResource BoolTemplate}"
		                              ComboBoxTemplate="{StaticResource ComboBoxTemplate}"
		                              TextBoxTemplate="{StaticResource TextBoxTemplate}" />
	</Window.Resources>

	<Grid Margin="10" DataContext="{Binding ElementName=root}">
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<DataGrid AutoGenerateColumns="False" CanUserAddRows="False"
		          ItemsSource="{Binding Source={StaticResource GroupedProperties}}">
			<!--  Grouping broke it, have fun!  -->
			<DataGrid.GroupStyle>
				<GroupStyle>
					<GroupStyle.HeaderTemplate>
						<DataTemplate>
							<TextBlock Margin="0,8,0,0" Padding="4,1,0,2" VerticalAlignment="Center"
							           Background="LightGray" FontWeight="Bold"
							           Text="{Binding Name, StringFormat={}{0} properties}" />
							<!--  https://stackoverflow.com/questions/19278515/use-stringformat-to-add-a-string-to-a-wpf-xaml-binding  -->
						</DataTemplate>
					</GroupStyle.HeaderTemplate>
				</GroupStyle>
			</DataGrid.GroupStyle>

			<DataGrid.Columns>
				<DataGridTemplateColumn Header="Property" IsReadOnly="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Name, Converter={x:Static util:StringTo.HumanReadable}}" ToolTip="{Binding Description}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Width="*" MinWidth="135" Header="Value">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<!--  Dynamically choose editor based on property type  -->
							<ContentControl Content="{Binding}" ContentTemplateSelector="{StaticResource EditorTemplateSelector}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
			</DataGrid.Columns>
		</DataGrid>


		<Grid Grid.Row="1" Height="30" Margin="0,10,0,0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="10" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="10" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Button Grid.Column="0" Click="buttonOkay_Click" Content="OK"
			        IsDefault="True" ToolTip="Saves and applies these values." />
			<Button Grid.Column="2" Click="buttonReset_Click" Content="Reset"
			        ToolTip="Resets the setting to their defaults." />
			<Button Grid.Column="4" Click="buttonCancel_Click" Content="Cancel"
			        IsCancel="True" ToolTip="Closes this window without applying any changes." />
		</Grid>
	</Grid>
</Window>
